name: Publish Package on Version Change

on:
  push:
    branches:
      - master
jobs:
  publish-if-version-changed:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if the package version has changed
        id: version_check
        uses: EndBug/version-check@v2
        with:
          # Check the version in the root package.json file
          diff-search: true
          file-name: package.json

      - name: If the version has changed, continue with the following steps
        if: steps.version_check.outputs.changed == 'true'
        run: echo "The version has changed to ${{ steps.version_check.outputs.version }}. Proceeding to publish."

      - name: Setup node
        if: steps.version_check.outputs.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'npm'

      - name: Update the version in example/package.json
        if: steps.version_check.outputs.changed == 'true'
        run: |
          NEW_VERSION=${{ steps.version_check.outputs.version }}
          jq --arg v "$NEW_VERSION" '.dependencies."@vouched.id/vouched-react-native" = $v' example/package.json > example/package.json.tmp && mv example/package.json.tmp example/package.json

      - name: Install dependencies
        if: steps.version_check.outputs.changed == 'true'
        run: npm install

      - name: Configure Git
        if: steps.version_check.outputs.changed == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Confirm the version change in example/package.json
        if: steps.version_check.outputs.changed == 'true'
        run: |
          git add example/package.json
          git commit -m "chore: update the version in example to ${{ steps.version_check.outputs.version }}"
          git push

      - name: Create a Git tag with the new version
        if: steps.version_check.outputs.changed == 'true'
        run: |
          git tag -a "v${{ steps.version_check.outputs.version }}" -m "Release v${{ steps.version_check.outputs.version }}"
          git push origin --tags

      - name: Publish to NPM
        if: steps.version_check.outputs.changed == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}